{"version":3,"sources":["index.tsx"],"names":["requireNativeComponent","UIManager","Platform","processColor","React","PropTypes","animations","LINKING_ERROR","select","ios","default","ComponentName","LoaderKitNative","LoaderKit","props","color","propTypes","name","oneOf","string","size","OS","number","isRequired","getViewManagerConfig","Error"],"mappings":";;AAAA,SACEA,sBADF,EAEEC,SAFF,EAGEC,QAHF,EAKEC,YALF,QAMO,cANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,aAAa,GAChB,kFAAD,GACAL,QAAQ,CAACM,MAAT,CAAgB;AAAEC,EAAAA,GAAG,EAAE,gCAAP;AAAyCC,EAAAA,OAAO,EAAE;AAAlD,CAAhB,CADA,GAEA,sDAFA,GAGA,6CAJF;AAoBA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,eAAe,GACnBZ,sBAAsB,CAAuBW,aAAvB,CADxB;;AAGA,MAAME,SAAS,GAAIC,KAAD,IAA2B;AAC3C,sBAAO,oBAAC,eAAD,eAAqBA,KAArB;AAA4B,IAAA,KAAK,EAAEX,YAAY,CAACW,KAAK,CAACC,KAAP;AAA/C,KAAP;AACD,CAFD;;AAIAF,SAAS,CAACG,SAAV,GAAsB;AACpBC,EAAAA,IAAI,EAAEZ,SAAS,CAACa,KAAV,CAAgBZ,UAAhB,CADc;AAEpBS,EAAAA,KAAK,EAAEV,SAAS,CAACc,MAFG;AAGpBC,EAAAA,IAAI,EAAElB,QAAQ,CAACmB,EAAT,KAAgB,KAAhB,GAAwBhB,SAAS,CAACiB,MAAV,CAAiBC,UAAzC,GAAsDlB,SAAS,CAACiB;AAHlD,CAAtB;AAMA,eAAerB,SAAS,CAACuB,oBAAV,CAA+Bb,aAA/B,KAAiD,IAAjD,GACXE,SADW,GAEX,MAAM;AACJ,QAAM,IAAIY,KAAJ,CAAUlB,aAAV,CAAN;AACD,CAJL","sourcesContent":["import {\n  requireNativeComponent,\n  UIManager,\n  Platform,\n  ViewStyle,\n  processColor,\n} from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport animations from './animations';\n\nconst LINKING_ERROR =\n  `The package 'react-native-loader-kit' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\ntype BaseProps = {\n  name?: string;\n  size?: number;\n  style: ViewStyle;\n};\n\ntype LoaderKitProps = {\n  color?: string;\n} & BaseProps;\n\ntype LoaderKitNativeProps = {\n  color?: number;\n} & BaseProps;\n\nconst ComponentName = 'LoaderKitView';\nconst LoaderKitNative =\n  requireNativeComponent<LoaderKitNativeProps>(ComponentName);\n\nconst LoaderKit = (props: LoaderKitProps) => {\n  return <LoaderKitNative {...props} color={processColor(props.color)} />;\n};\n\nLoaderKit.propTypes = {\n  name: PropTypes.oneOf(animations),\n  color: PropTypes.string,\n  size: Platform.OS === 'ios' ? PropTypes.number.isRequired : PropTypes.number,\n};\n\nexport default UIManager.getViewManagerConfig(ComponentName) != null\n  ? LoaderKit\n  : () => {\n      throw new Error(LINKING_ERROR);\n    };\n"]}