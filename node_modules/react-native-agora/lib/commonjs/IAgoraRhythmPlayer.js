"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RhythmPlayerStateType = exports.RhythmPlayerErrorType = exports.AgoraRhythmPlayerConfig = void 0;
require("./extension/IAgoraRhythmPlayerExtension");
/**
 * Virtual metronome state.
 */
let RhythmPlayerStateType = /*#__PURE__*/function (RhythmPlayerStateType) {
  RhythmPlayerStateType[RhythmPlayerStateType["RhythmPlayerStateIdle"] = 810] = "RhythmPlayerStateIdle";
  RhythmPlayerStateType[RhythmPlayerStateType["RhythmPlayerStateOpening"] = 811] = "RhythmPlayerStateOpening";
  RhythmPlayerStateType[RhythmPlayerStateType["RhythmPlayerStateDecoding"] = 812] = "RhythmPlayerStateDecoding";
  RhythmPlayerStateType[RhythmPlayerStateType["RhythmPlayerStatePlaying"] = 813] = "RhythmPlayerStatePlaying";
  RhythmPlayerStateType[RhythmPlayerStateType["RhythmPlayerStateFailed"] = 814] = "RhythmPlayerStateFailed";
  return RhythmPlayerStateType;
}({});
/**
 * Virtual Metronome error message.
 */
exports.RhythmPlayerStateType = RhythmPlayerStateType;
let RhythmPlayerErrorType = /*#__PURE__*/function (RhythmPlayerErrorType) {
  RhythmPlayerErrorType[RhythmPlayerErrorType["RhythmPlayerErrorOk"] = 0] = "RhythmPlayerErrorOk";
  RhythmPlayerErrorType[RhythmPlayerErrorType["RhythmPlayerErrorFailed"] = 1] = "RhythmPlayerErrorFailed";
  RhythmPlayerErrorType[RhythmPlayerErrorType["RhythmPlayerErrorCanNotOpen"] = 801] = "RhythmPlayerErrorCanNotOpen";
  RhythmPlayerErrorType[RhythmPlayerErrorType["RhythmPlayerErrorCanNotPlay"] = 802] = "RhythmPlayerErrorCanNotPlay";
  RhythmPlayerErrorType[RhythmPlayerErrorType["RhythmPlayerErrorFileOverDurationLimit"] = 803] = "RhythmPlayerErrorFileOverDurationLimit";
  return RhythmPlayerErrorType;
}({});
/**
 * The metronome configuration.
 */
exports.RhythmPlayerErrorType = RhythmPlayerErrorType;
class AgoraRhythmPlayerConfig {}
exports.AgoraRhythmPlayerConfig = AgoraRhythmPlayerConfig;
//# sourceMappingURL=IAgoraRhythmPlayer.js.map